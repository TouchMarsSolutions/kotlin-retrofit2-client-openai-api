group 'org.openapi.client.kotlin.openai'
version '4.0.0' // since GPT-4 is available

buildscript {
    ext.kotlin_version = '1.8.10'
    ext.kotlin_coroutine_version = '1.6.4'
//    ext.kotlintest_junit4_version = '3.4.2'
    ext.retrofitVersion = '2.9.0'
    ext.moshi_version = '1.14.0'
    ext.okhttp4_version = '4.10.0'

    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven-publish'

repositories {
    mavenLocal()
    mavenCentral()
}

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

// kotlin target to 17
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "17"
    }
}

test {
    useJUnitPlatform()
}

idea {
    module {
        sourceDirs += file('src/main/kotlin')
        testSourceDirs += file('src/test/kotlin')
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp4_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
//    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_junit4_version"
}
